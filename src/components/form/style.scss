@import "../../style/ver";
@import "../../style/mixins";

$grid-gutter-width: 0;
$label-color: $base-color;
$label-required-color: $error-color;
$input-prefix-cls: $css-prefix + "input";

@mixin form-control-validation($text-color: $base-color, $border-color: $border-color, $background-color: $base-bg) {
  .#{$css-prefix}form-explain,
  .#{$css-prefix}form-split {
    color: $text-color;
  }

  // 输入框的不同校验状态
  .#{$css-prefix}input {
    border-color: $border-color;

    &:not([disabled]):hover {
      border-color: $border-color;
    }
  }

  .#{$css-prefix}input-group-extra {
    color: $text-color;
    border-color: $border-color;
    background-color: $background-color;
  }

  .has-feedback {
    color: $text-color;
  }

}

.#{$css-prefix}form-item-required:before {
  display: inline-block;
  margin-right: 4px;
  content: "*";
  font-family: SimSun;
  font-size: $font-size-base;
  color: $label-required-color;
}

// 表单排列
.#{$css-prefix}form-item {
  font-size: $font-size-base;
  margin-bottom: 24px;
  box-sizing: border-box;

  &-row {
    > [class*="vc-col-"] {
      padding-right: 8px;
    }
  }

  &.#{$css-prefix}form-item-with-help {
    margin-bottom: 24px - $font-size-base * $line-height-base;
  }

  &.#{$css-prefix}form-item-only-text {
    margin-bottom: 0;

    > label {
      padding-top: 0;
    }

    .#{$css-prefix}form-item-control {
      line-height: 1.5;
    }

    .#{$css-prefix}form-text {
      padding-top: 0;
    }

    .#{$css-prefix}switch {
      margin: 0;
    }
  }

  > [class*="vc-col-"] {
    padding-right: 8px;
  }

  > label {
    color: $label-color;
    text-align: right;
    vertical-align: middle;
    padding-right: 5px;
    padding-top: 9px;
    padding-bottom: 9px;
  }

  .#{$css-prefix}switch-sm {
    margin: 8px 0;
  }

  .#{$input-prefix-cls}-wrap {
    vertical-align: middle;
  }
  textarea.#{$input-prefix-cls} {
    vertical-align: middle;
  }

  .#{$css-prefix}label {
    padding-top: 6px;
  }
}

.#{$css-prefix}form-footer {
  margin-top: 24px;

  .vc-btn {
    margin-right: 10px;
  }
}

.#{$css-prefix}form-explain {
  line-height: 1.5;
  margin-top: 3px;
  color: $gray-color;

  &-inline {
    margin-top: 0;
    padding: 9px 0;
  }
}


.#{$css-prefix}form-text {
  display: inline-block;
  padding: 9px 8px 9px 0;
  color: $base-color;
  line-height: $line-height-base;
}

.#{$css-prefix}form-split {
  display: block;
  text-align: center;
  line-height: 36px;
}

//== Horizontal Form
.#{$css-prefix}form-horizontal {
  max-width: 700px;

  .#{$css-prefix}form-item,
  .#{$css-prefix}form-item-row {
    @include make-row();
  }
}

//==detail form
.#{$css-prefix}form-detail {
  .#{$css-prefix}form-item > label {
    color: $gray-color;
  }
}

//== Inline Form
.#{$css-prefix}form-inline {
  margin-bottom: 20px;

  .#{$css-prefix}form-item {
    display: inline-block;
    vertical-align: middle;
    margin-right: 10px;
    margin-bottom: 0;

    &-with-help {
      margin-bottom: 24px;
    }

    > div {
      display: inline-block;
      vertical-align: middle;
    }
  }

  .pull-right > .#{$css-prefix}form-item {
    margin-left: 10px;
    margin-right: 0;
  }

  .#{$css-prefix}input {
    display: inline-block;
    width: auto;
    vertical-align: middle;

    &-wrap {
      display: inline-block;
      width: auto;
      vertical-align: middle;

      .#{$css-prefix}input {
        width: 100%;
      }
    }

    &-group {
      .#{$css-prefix}input {
        width: 100%;
      }
    }
  }

  .#{$css-prefix}form-text {
    display: inline-block;
  }

  .has-feedback {
    display: inline-block;
  }

  .#{$css-prefix}label {
    margin-right: 0;
  }
}

.#{$css-prefix}form-horizontal,
.#{$css-prefix}form-inline {
  label {
    > input[type="radio"],
    > input[type="checkbox"] {
      margin-right: 4px;
    }
  }
}

// Validation state
.has-success,
.has-warning,
.has-error,
.is-validating {
  &.has-feedback:after {
    position: absolute;
    top: 0;
    right: 0;
    font-family: "vcicon" !important;
    width: $height-lg;
    height: $height-lg;
    line-height: $height-lg;
    text-align: center;
    font-size: 14px;
    animation: zoomIn .3s $ease-out-back;
  }
}

.has-success {
  &.has-feedback:after {
    animation-name: diffZoomIn1 !important;
  }
}

.has-error {
  &.has-feedback:after {
    animation-name: diffZoomIn2 !important;
  }
}

.has-warning {
  &.has-feedback:after {
    animation-name: diffZoomIn3 !important;
  }
}

.has-success {
  @include form-control-validation($success-color, $success-color);

  &.has-feedback:after {
    content: '\e62f';
    color: $success-color;
  }
}

.has-warning {
  @include form-control-validation($warning-color, $warning-color);

  &.has-feedback:after {
    content: '\e634';
    color: $warning-color;
  }
}

.has-error {
  @include form-control-validation($error-color, $error-color);

  &.has-feedback:after {
    content: '\e634';
    color: $error-color;
  }
}

.is-validating {
  &.has-feedback:after {
    display: inline-block;
    animation: loadingCircle 1s infinite linear;
    content: "\e6a1";
  }
}

// need there different zoom animation
// otherwise won't trigger anim
keyframes(diffZoomIn1) {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

keyframes(diffZoomIn2) {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}

keyframes(diffZoomIn3) {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
